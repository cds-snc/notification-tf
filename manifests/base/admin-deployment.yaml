apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: admin 
  name:  admin
  namespace: notification-canada-ca
spec:
  replicas: 8
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: admin 
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: admin
    spec:
      initContainers:
        - name: init-postgres
          image: alpine
          command:
            [
              "sh",
              "-c",
              "until nslookup api.notification-canada-ca.svc.cluster.local; do echo waiting for postgres; sleep 2; done;",
            ]
      containers:
        - image: admin
          imagePullPolicy: Always
          name: admin 
          env:
            - name: ADMIN_BASE_URL
              value: https://$(BASE_DOMAIN)
            - name: API_HOST_NAME
              value: http://api.notification-canada-ca.svc.cluster.local:6011
            - name: NOTIFY_ENVIRONMENT
              value: '$(ENVIRONMENT)'
            - name: SQLALCHEMY_DATABASE_URI
              value: '$(POSTGRES_SQL)'
            - name: REDIS_URL
              value: redis://redis.notification-canada-ca.svc.cluster.local:6379
            - name: REDIS_ENABLED
              value: "1"
          resources: {}
          ports:
            - containerPort: 6012
          readinessProbe:
            tcpSocket:
              port: 6012
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            tcpSocket:
              port: 6012
            initialDelaySeconds: 3
            periodSeconds: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
